nameOverride:
coordinatorNameOverride:
workerNameOverride:
image:
  registry: ""
  repository: trinodb/trino
  tag: ""
  digest: ""
  useRepositoryAsSoleImageReference: false
  pullPolicy: IfNotPresent
imagePullSecrets:
  - name: registry-credentials
server:
  workers: 2
  node:
    environment: production
    dataDir: /data/trino
    pluginDir: /usr/lib/trino/plugin
  log:
    trino:
      level: INFO
  config:
    path: /etc/trino
    http:
      port: 8080
    https:
      enabled: false
      port: 8443
      keystore:
        path: ""
    authenticationType: ""
    query:
      maxMemory: "4GB"
  exchangeManager:
    name: "filesystem"
    baseDir: "/tmp/trino-local-file-system-exchange-manager"
  workerExtraConfig: ""
  coordinatorExtraConfig: ""
  autoscaling:
    enabled: false
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
    behavior: {}
accessControl: {}
resourceGroups: {}
additionalNodeProperties: []
additionalConfigProperties: []
additionalLogProperties: []
additionalExchangeManagerProperties: []
eventListenerProperties: []
additionalCatalogs: {}
env: []
envFrom: []
initContainers: {}
sidecarContainers: {}
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
shareProcessNamespace:
  coordinator: false
  worker: false
service:
  annotations: {}
  type: ClusterIP
  port: 8080
auth: {}
serviceAccount:
  create: false
  name: ""
  annotations: {}
configMounts: []
secretMounts: []
coordinator:
  jvm:
    maxHeapSize: "8G"
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"
  config:
    memory:
      heapHeadroomPerNode: ""
    query:
      maxMemoryPerNode: "1GB"
  additionalJVMConfig: []
  additionalExposedPorts: {}
  resources: {}
  livenessProbe: {}
  readinessProbe: {}
  lifecycle: {}
  terminationGracePeriodSeconds: 30
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalConfigFiles: {}
  additionalVolumes: []
  additionalVolumeMounts: []
  annotations: {}
  labels: {}
  configMounts:
    - name: catalog-config
      mountPath: /etc/trino/catalog
      readOnly: true
  secretMounts: []
worker:
  jvm:
    maxHeapSize: "8G"
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"
  config:
    memory:
      heapHeadroomPerNode: ""
    query:
      maxMemoryPerNode: "1GB"
  additionalJVMConfig: []
  additionalExposedPorts: {}
  resources: {}
  livenessProbe: {}
  readinessProbe: {}
  lifecycle: {}
  terminationGracePeriodSeconds: 30
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalConfigFiles: {}
  additionalVolumes: []
  additionalVolumeMounts: []
  annotations: {}
  labels: {}
  configMounts:
    - name: catalog-config
      mountPath: /etc/trino/catalog
      readOnly: true
  secretMounts: []
kafka:
  mountPath: "/etc/trino/schemas"
  tableDescriptions: {}
jmx:
  enabled: false
  registryPort: 9080
  serverPort: 9081
  exporter:
    enabled: false
    image: bitnami/jmx-exporter:latest
    pullPolicy: Always
    port: 5556
    configProperties: []
serviceMonitor:
  enabled: false
  labels:
    prometheus: kube-prometheus
  interval: "30s"
commonLabels: {}
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []